{
  "openapi": "3.0.3",
  "info": {
    "version": "1.4.3",
    "title": "Phonebook API",
    "description": "Documentation for phonebook API.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://phonebook-api-exp1.onrender.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorizarion endpoints"
    },
    {
      "name": "User",
      "description": "User info endpoints"
    },
    {
      "name": "Contacts",
      "description": "Contacts endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "New user registration.",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "New user.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Authorization of an already registered user.",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "logged in user.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email is wrong or not verify, or password is wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "Signed out user.",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User successfully logged out."
          },
          "401": {
            "description": "Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user.",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Data of the current user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCurrentUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/subscription": {
      "patch": {
        "tags": ["User"],
        "summary": "Change subscription for current user.",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Subscription status.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data of the current user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "your subscription is already equal to current.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Change user's avatar.",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's avatar.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/changeAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/changeAvatarResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/verify/:verificationToken": {
      "get": {
        "tags": ["User"],
        "summary": "Verification user's email adress.",
        "parameters": [
          {
            "-in": "path",
            "name": "verificationToken",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Account verification token."
            }
          }
        ],
        "security": [],
        "requestBody": {},
        "responses": {
          "301": {
            "description": "Redirect user after validating email."
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/verify": {
      "post": {
        "tags": ["User"],
        "summary": "Recheck verification user's email adress.",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's email.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recheckVerifyEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Verification has already been passed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get all contacts for user.",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAllContactsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/:contactId": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get one contact by ID.",
        "parameters": [
          {
            "-in": "path",
            "name": "contactId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Contact id."
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getOneContactResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/add": {
      "post": {
        "tags": ["Contacts"],
        "summary": "Create new contact.",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Contact information.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newContactRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getOneContactResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/delete/:contactId": {
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete contact by ID.",
        "parameters": [
          {
            "-in": "path",
            "name": "contactId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Contact id."
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteContactResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/edit/:contactId": {
      "put": {
        "tags": ["Contacts"],
        "summary": "Edit contact by ID.",
        "parameters": [
          {
            "-in": "path",
            "name": "contactId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Contact id."
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Contact information.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getOneContactResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing fields.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/:contactId/favorite": {
      "patch": {
        "tags": ["Contacts"],
        "summary": "Edit favorite status for contact.",
        "parameters": [
          {
            "-in": "path",
            "name": "contactId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Contact id."
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Contact information.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/favoriteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getOneContactResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing field favorite.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "name", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Boby"
          },
          "password": {
            "type": "string",
            "description": "User password (6 to 12 characters)",
            "example": "qwe123"
          },
          "subscription": {
            "type": "string",
            "description": "User subscription"
          }
        }
      },
      "AuthorizationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password (6 to 12 characters)",
            "example": "qwe123"
          }
        }
      },
      "AuthorizationResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "code": { "type": "integer" },
          "token": { "type": "string" },
          "user": { "$ref": "#/components/schemas/User" }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "avatarURL": { "type": "string" },
          "subscription": { "type": "string" }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "code": { "type": "integer" },
          "message": { "type": "string" }
        }
      },
      "getCurrentUserResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "code": { "type": "integer" },
          "user": { "$ref": "#/components/schemas/User" }
        }
      },
      "subscriptionRequest": {
        "type": "object",
        "required": ["subscription"],
        "properties": {
          "subscription": {
            "type": "string",
            "description": "Subscription status"
          }
        }
      },
      "changeAvatarRequest": {
        "type": "object",
        "required": ["avatar"],
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "Images for upload."
          }
        }
      },
      "changeAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": { "type": "string" }
        }
      },
      "recheckVerifyEmailRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "getAllContactsResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "code": { "type": "integer" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/contact" }
          }
        }
      },
      "contact": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "phone": { "type": "string" },
          "favorite": { "type": "boolean" },
          "owner": { "type": "string" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" }
        }
      },
      "getOneContactResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "code": { "type": "integer" },
          "data": { "$ref": "#/components/schemas/contact" }
        }
      },
      "newContactRequest": {
        "type": "object",
        "required": ["name", "email", "phone"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Contact name."
          },
          "email": {
            "type": "string",
            "description": "Contact email"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone"
          },
          "favorite": {
            "type": "boolean",
            "description": "favorite status"
          }
        }
      },
      "deleteContactResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "code": { "type": "integer" },
          "message": { "type": "string" },
          "data": { "$ref": "#/components/schemas/contact" }
        }
      },
      "favoriteRequest": {
        "type": "object",
        "required": ["favorite"],
        "properties": {
          "favorite": {
            "type": "boolean",
            "description": "Favorite status"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
